rule "Update garage door barrier_state after switch state change events"
when
	Item Garage_Door changed
then
    if (Garage_Door.state == ON) {//closed
		Garage_Door_Position.sendCommand("0")
        //logDebug("Rules", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",Garage_Door_Position.state)
        //sendTelegram("bot2", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",Garage_Door_Position.state)
        //sendTelegram("bot2", "Garage door received CLOSE command") 
    }
    else if (Garage_Door.state == OFF) {
		Garage_Door_Position.sendCommand("255")
        //logDebug("Rules", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",GarageAttached_Door_Position.state)
        //sendTelegram("bot2", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",GarageAttached_Door_Position.state)
	    //sendTelegram("bot2", "Garage door received OPEN command")
    }
end

rule "Update garage door states after barrier_state events"
when
	Item Garage_Door_Position received update
then
    if (Garage_Door_Position.state == 255 && Garage_Door.state == ON) {
		sendTelegram("bot2", "Garage door is: OPENING") 
        postUpdate(EventLog, "Garage door is: OPENING -> ")
        //say("The garage door is Opening")
        Garage_Door.postUpdate(OFF)
        Garage_Door_Contact.postUpdate(OPEN)
        
        //Turn ON Garage Lights when the door opens
        Garage_Inside_Switch.sendCommand(ON)
        
        //logDebug("Rules", "Lock: Update garage door states after barrier_state events (GarageAttached_Door) [{}]",Garage_Door.state)
        //sendTelegram("bot2", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",Garage_Door_Position.state)
        
        
    }
    else if (Garage_Door_Position.state == 0 && Garage_Door.state == OFF) {
		sendTelegram("bot2", "Garage door is: CLOSING")
        postUpdate(EventLog, "Garage door is: CLOSING -> ")
        //say("The garage door is Closing")
        Garage_Door.postUpdate(ON)
        Garage_Door_Contact.postUpdate(CLOSED)

        //Turn OFF Garage Lights when the door closes
        //Garage_Inside_Switch.sendCommand(OFF)

        //logDebug("Rules", "Lock: Update garage door states after barrier_state events (GarageAttached_Door) [{}]",Garage_Door.state)
	    //sendTelegram("bot2", "Lock: Update garage door barrier_state after switch state change events (GarageAttached_Door_Position) [{}]",Garage_Door_Position.state)
        
        
    }
end
